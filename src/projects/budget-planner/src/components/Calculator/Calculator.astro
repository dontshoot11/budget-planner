---
import styles from "./style.module.css";
import { getLangSettings } from "../../translations/translationSettings";
const { t } = getLangSettings(Astro.url);
---

<budget-calculator>
	<div class={styles.calculator}>
		<p class={styles.text}>
			{t.calc_desc_1}
		</p>
		<input data-role="budgetInput" class={styles.input} type="number" />
		<p class={styles.text}>
			{t.calc_desc_2}
		</p>
		<input data-role="dateInput" class={styles.input} type="date" />
		<p class={styles.text}>
			{t.calc_desc_3}
			<div data-role="daysLeft" class={styles.left}></div>
		</p>
		<p class={styles.text}>
			{t.calc_desc_4}
			<div data-role="budgetLeft" class={styles.left}></div>
		</p>
		<p class={styles.text}>
			{t.calc_desc_5}
		</p>
		<input data-role="spendInput" class={styles.input} type="number" />
	</div>
</budget-calculator>

<script>
	class BudgetCalculator extends HTMLElement {
		constructor() {
			super();
			const datePicker = this.querySelector(
				'[data-role="dateInput"]'
			) as HTMLInputElement;
			const budgetPicker = this.querySelector(
				'[data-role="budgetInput"]'
			) as HTMLInputElement;
			const spendPicker = this.querySelector(
				'[data-role="spendInput"]'
			) as HTMLInputElement;
			const daysLeftValue = this.querySelector('[data-role="daysLeft"]');
			const bugetLeftValue = this.querySelector('[data-role="budgetLeft"]');
			const calculate = () => {
				const parsedEnterDate = Date.parse(datePicker.value);
				const budgetValue = parseFloat(budgetPicker.value);
				const parsedToday = Date.now();
				const parsedDaysLeft = parsedEnterDate - parsedToday;
				const daysLeft = Math.ceil(parsedDaysLeft / 3600000 / 24);
				const budgetLeft = Math.round((budgetValue / daysLeft) * 100) / 100;
				bugetLeftValue.textContent = budgetLeft.toString();
				daysLeftValue.textContent = daysLeft.toString();
			};

			datePicker.addEventListener("change", () => {
				if (datePicker.value && budgetPicker.value) {
					calculate();
				}
			});
			budgetPicker.addEventListener("change", () => {
				if (datePicker.value && budgetPicker.value) {
					calculate();
				}
			});
			spendPicker.addEventListener("change", () => {
				if (datePicker.value && budgetPicker.value) {
					const spendValue = parseFloat(spendPicker.value);
					budgetPicker.value = (
						parseFloat(budgetPicker.value) - spendValue
					).toString();
					spendPicker.value = "";
					calculate();
				}
			});
		}
	}
	customElements.define("budget-calculator", BudgetCalculator);
</script>
